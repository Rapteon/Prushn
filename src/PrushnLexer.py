# Generated from Prushn.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,10,98,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,2,14,7,14,1,0,1,0,1,0,1,0,1,0,1,1,3,1,38,8,1,1,1,4,1,41,8,1,
        11,1,12,1,42,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,
        1,8,1,8,1,8,1,8,3,8,62,8,8,1,9,1,9,1,10,1,10,3,10,68,8,10,1,11,1,
        11,1,12,4,12,73,8,12,11,12,12,12,74,3,12,77,8,12,1,12,3,12,80,8,
        12,1,12,4,12,83,8,12,11,12,12,12,84,1,13,1,13,1,13,4,13,90,8,13,
        11,13,12,13,91,1,14,4,14,95,8,14,11,14,12,14,96,0,0,15,1,1,3,2,5,
        3,7,0,9,0,11,0,13,0,15,0,17,4,19,5,21,6,23,7,25,8,27,9,29,10,1,0,
        6,3,0,42,43,45,45,47,47,2,0,36,36,8377,8377,5,0,40,41,91,91,93,93,
        123,123,125,125,10,0,33,33,35,35,44,44,46,47,60,62,64,64,92,92,95,
        96,124,124,126,126,2,0,65,90,97,122,1,0,48,57,107,0,1,1,0,0,0,0,
        3,1,0,0,0,0,5,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
        1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,1,31,1,0,0,0,3,40,
        1,0,0,0,5,44,1,0,0,0,7,46,1,0,0,0,9,48,1,0,0,0,11,50,1,0,0,0,13,
        52,1,0,0,0,15,54,1,0,0,0,17,61,1,0,0,0,19,63,1,0,0,0,21,67,1,0,0,
        0,23,69,1,0,0,0,25,76,1,0,0,0,27,89,1,0,0,0,29,94,1,0,0,0,31,32,
        5,81,0,0,32,33,3,25,12,0,33,34,5,46,0,0,34,35,3,29,14,0,35,2,1,0,
        0,0,36,38,5,13,0,0,37,36,1,0,0,0,37,38,1,0,0,0,38,39,1,0,0,0,39,
        41,5,10,0,0,40,37,1,0,0,0,41,42,1,0,0,0,42,40,1,0,0,0,42,43,1,0,
        0,0,43,4,1,0,0,0,44,45,5,63,0,0,45,6,1,0,0,0,46,47,7,0,0,0,47,8,
        1,0,0,0,48,49,5,94,0,0,49,10,1,0,0,0,50,51,7,1,0,0,51,12,1,0,0,0,
        52,53,7,2,0,0,53,14,1,0,0,0,54,55,7,3,0,0,55,16,1,0,0,0,56,62,3,
        7,3,0,57,62,3,9,4,0,58,62,3,11,5,0,59,62,3,13,6,0,60,62,3,15,7,0,
        61,56,1,0,0,0,61,57,1,0,0,0,61,58,1,0,0,0,61,59,1,0,0,0,61,60,1,
        0,0,0,62,18,1,0,0,0,63,64,7,4,0,0,64,20,1,0,0,0,65,68,3,19,9,0,66,
        68,3,17,8,0,67,65,1,0,0,0,67,66,1,0,0,0,68,22,1,0,0,0,69,70,7,5,
        0,0,70,24,1,0,0,0,71,73,7,5,0,0,72,71,1,0,0,0,73,74,1,0,0,0,74,72,
        1,0,0,0,74,75,1,0,0,0,75,77,1,0,0,0,76,72,1,0,0,0,76,77,1,0,0,0,
        77,79,1,0,0,0,78,80,5,46,0,0,79,78,1,0,0,0,79,80,1,0,0,0,80,82,1,
        0,0,0,81,83,3,23,11,0,82,81,1,0,0,0,83,84,1,0,0,0,84,82,1,0,0,0,
        84,85,1,0,0,0,85,26,1,0,0,0,86,90,3,21,10,0,87,90,3,25,12,0,88,90,
        3,17,8,0,89,86,1,0,0,0,89,87,1,0,0,0,89,88,1,0,0,0,90,91,1,0,0,0,
        91,89,1,0,0,0,91,92,1,0,0,0,92,28,1,0,0,0,93,95,5,32,0,0,94,93,1,
        0,0,0,95,96,1,0,0,0,96,94,1,0,0,0,96,97,1,0,0,0,97,30,1,0,0,0,12,
        0,37,42,61,67,74,76,79,84,89,91,96,0
    ]

class PrushnLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    QUESTION_BEGIN = 1
    NEWLINE = 2
    QUESTION_MARK = 3
    SPECIAL = 4
    ALPHABET = 5
    LETTER = 6
    DIGIT = 7
    NUMBER = 8
    WORD = 9
    SPACE = 10

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'?'" ]

    symbolicNames = [ "<INVALID>",
            "QUESTION_BEGIN", "NEWLINE", "QUESTION_MARK", "SPECIAL", "ALPHABET", 
            "LETTER", "DIGIT", "NUMBER", "WORD", "SPACE" ]

    ruleNames = [ "QUESTION_BEGIN", "NEWLINE", "QUESTION_MARK", "OPERATOR", 
                  "EXPONENT", "MONEY", "BLOCK", "OTHER", "SPECIAL", "ALPHABET", 
                  "LETTER", "DIGIT", "NUMBER", "WORD", "SPACE" ]

    grammarFileName = "Prushn.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


